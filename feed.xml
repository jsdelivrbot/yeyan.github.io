<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ye&#39;s Programming Café</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 02 Sep 2015 08:17:50 +0930</pubDate>
    <lastBuildDate>Wed, 02 Sep 2015 08:17:50 +0930</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>XMonad Physical Screen Setup</title>
        <description>&lt;p&gt;When use xmonad with multi monitors. We can spawn a xrandr process during xmonad startup to configure the monitors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hint&lt;/em&gt;&lt;/strong&gt; You may use arandr to generate xrandr options&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- Setup physical monitors
setupMonitors = do
    count &amp;lt;- countMonitors 
    -- only applies when external monitors are available
    when (count == 3) $
        spawn $ concat $ intersperse &quot; &quot;
            [ &quot;xrandr&quot;
            , &quot;--output HDMI1&quot;
            , &quot;--mode 1920x1080&quot;
            , &quot;--pos 0x0&quot;
            , &quot;--rotate normal&quot;
            , &quot;--output LVDS1&quot;
            , &quot;--off&quot;
            , &quot;--output VIRTUAL1&quot;
            , &quot;--off &quot;
            , &quot;--output DP1&quot;
            , &quot;--off &quot;
            , &quot;--output VGA1&quot;
            , &quot;--mode 1920x1080&quot;
            , &quot;--pos 1920x0&quot;
            , &quot;--rotate normal&quot;
            ]

-- count physical monitors by count how my lines of &quot;connected&quot; in xrandr&#39;s output
countMonitors = do
    (_, Just hout, _, _) &amp;lt;-
        createProcess (proc &quot;xrandr&quot; [&quot;-q&quot;]) 
            { env = Just [(&quot;DISPLAY&quot;, &quot;:0&quot;)]
            , std_out = CreatePipe }
    length . filter (isInfixOf &quot; connected&quot;) . lines &amp;lt;$&amp;gt; hGetContents hout
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 01 Sep 2015 19:55:51 +0930</pubDate>
        <link>http://yourdomain.com/xmonad/xrandr/2015/09/01/XMonad-Physical-Screen.html</link>
        <guid isPermaLink="true">http://yourdomain.com/xmonad/xrandr/2015/09/01/XMonad-Physical-Screen.html</guid>
        
        
        <category>xmonad</category>
        
        <category>xrandr</category>
        
      </item>
    
      <item>
        <title>Generate a Jekyll Archive Index</title>
        <description>&lt;p&gt;Jekyll does not provide archive function out of the box.
There are some solution solve this problem by creating a separate archive page,
but I really like a archive side bar on the index page (like the one on this site).&lt;/p&gt;

&lt;p&gt;After spend some time on Jekyll’s documentation. 
I found this is actually pretty easy to achieve by implementing a custom plugin.&lt;/p&gt;

&lt;p&gt;First we need create a ruby file under &lt;code&gt;_plugins&lt;/code&gt; with the following content.
The name of the file does not matter as long as it suffixes with &lt;code&gt;rb&lt;/code&gt; it will be loaded on Jekyll start up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Jekyll

  module ArchiveIndexFilter
    def to_archive(input, format) 
        # posts will be grouped by specified format (eg. month-year)
        input.group_by{ |a| a.date.strftime(format) }
    end
  end

end

Liquid::Template.register_filter(Jekyll::ArchiveIndexFilter)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can use the filter we just created. If you like the archive index bar in this site, here is the HTML snippet:&lt;/p&gt;

&lt;p&gt;Hint: &lt;strong&gt;&lt;em&gt;Jekyll needs a restart to load the Ruby code&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;panel panel-default&quot;&amp;gt;
    &amp;lt;div class=&quot;panel-heading&quot;&amp;gt;Archive&amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;panel-body&quot;&amp;gt;
        {% assign archive = site.posts | to_archive:&#39;%b %Y&#39; %}

        &amp;lt;ul class=&quot;nav&quot;&amp;gt;
            {% for archive_entry in archive %}
            &amp;lt;li class=&quot;archive-entry&quot;&amp;gt;
                &amp;lt;a href=&quot;javascript:void(0)&quot;&amp;gt;{{ archive_entry[0] }} &amp;lt;span class=&quot;badge pull-right&quot;&amp;gt;{{ archive_entry[1] | size }}&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;ul&amp;gt;
                    {% for post in archive_entry[1] %}
                    &amp;lt;li&amp;gt;&amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    {% endfor %}
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
            {% endfor %}
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Mon, 31 Aug 2015 01:24:53 +0930</pubDate>
        <link>http://yourdomain.com/jekyll/2015/08/31/Jekyll-Archive.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/2015/08/31/Jekyll-Archive.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
